version: '3.8'

services:
  # E14Z Web Application
  e14z:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NEXT_PUBLIC_SITE_URL=http://localhost:3000
    env_file:
      - .env.local
    volumes:
      # Mount source code for development hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - e14z-network

  # Development database (optional - using external Supabase)
  # Uncomment if you want a local database for development
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: e14z_dev
  #     POSTGRES_USER: e14z
  #     POSTGRES_PASSWORD: e14z_dev_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - e14z-network

  # Redis for caching and rate limiting (optional)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - e14z-network

networks:
  e14z-network:
    driver: bridge

# volumes:
#   postgres_data:
#   redis_data: